apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'kotlin-android'
apply plugin: 'maven'

def build = depends.build
def libs = depends.libs;
def support = depends.support
def test = depends.test

def version_code = depends.artifact.VCode
def version_name = depends.artifact.VName

def USER = "zhangkari"
def GROUP = "com.class100.hades"
def ARTIFACT = "hades"
def VCode = version_code
def VName = version_name
def DESCRIPTION = "lib Hades for android infra"
def URL = "https://github.com/zhangkari/hades"

android {
    compileSdkVersion build.compileSdkVersion

    defaultConfig {
        minSdkVersion build.minSdkVersion
        targetSdkVersion build.compileSdkVersion
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publish {
        userOrg = USER
        groupId = GROUP
        artifactId = ARTIFACT
        publishVersion = VName
        desc = DESCRIPTION
        website = URL
    }
}

def isRelease() {
    return !depends.artifact.VName.contains("-")
}

def getRepoUrl() {
    def url = NEXUS_HOST_URL + "/repository"
    def releasesUrl = url + "/maven-releases/"
    def snapshotUrl = url + "/maven-snapshots/"
    isRelease() ? releasesUrl : snapshotUrl
}

/*
publishing {
    publications {
        maven(MavenPublication) {
            groupId = GROUP
            artifactId = ARTIFACT
            version = VName
        }
    }

    repositories {
        maven {
            def url = NEXUS_HOST_URL + "/repository/maven-public"
            def releasesUrl = url + "/maven-releases/"
            def snapshotUrl = url + "/maven-snapshots/"
            url = isRelease() ? releasesUrl : snapshotUrl
            credentials {
                username = NEXUS_USERNAME
                password = NEXUS_PASSWORD
            }
        }
    }
}
*/

uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = GROUP
            pom.artifactId = ARTIFACT
            pom.version = VName
            repository(url: getRepoUrl()) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
        }
    }

    println("uploadArchives")
    println("####################################")
    println("url => " + getRepoUrl())
    println("artifact => " + GROUP + ":" + ARTIFACT + ":" + VName)
    println("####################################")
}

def vsn(artifact) {
    if (isRelease()) {
        return artifact
    } else {
        return "$artifact-SNAPSHOT"
    }
}

dependencies {
    implementation support.appcompat
    api 'com.squareup.okhttp3:okhttp:4.2.2'
    api 'org.conscrypt:conscrypt-android:2.2.1'
    api 'com.github.zhangkari:atropos:v0.0.8'
    implementation libs.json
    testImplementation test.junit
    androidTestImplementation test.andJunit
    androidTestImplementation test.espresso
}